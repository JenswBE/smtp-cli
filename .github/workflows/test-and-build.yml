name: Test and build
on:
  push:
    branches: [main]
    tags:
      - "*"

permissions:
  contents: write

env:
  GO_VERSION: "1.20"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true

      - name: Pull common linter configs
        run: wget -O .golangci.yml https://raw.githubusercontent.com/JenswBE/setup/main/programming_configs/golang/.golangci.yml

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: >-
            --timeout=5m
            --disable noctx
            --exclude 'func name will be used as send.SendEmail'

      - name: Start E2E services
        run: |
          docker compose -f test/docker-compose.yml up -d

      - name: Run tests
        run: |
          go test ./...

      - name: Build binaries
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          export CGO_ENABLED=0
          export GOOS=linux
          GOARCH=amd64 go build -ldflags='-extldflags=-static' -o smtp-cli.linux-amd64
          GOARCH=arm GOARM=6 go build -ldflags='-extldflags=-static' -o smtp-cli.linux-armv6
          GOARCH=arm GOARM=7 go build -ldflags='-extldflags=-static' -o smtp-cli.linux-armv7
          GOARCH=arm64 go build -ldflags='-extldflags=-static' -o smtp-cli.linux-arm64

      - name: Create release on tag
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: |
            smtp-cli.linux-amd64
            smtp-cli.linux-armv6
            smtp-cli.linux-armv7
            smtp-cli.linux-arm64
